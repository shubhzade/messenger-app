[{"D:\\chatApp\\massenger\\src\\index.js":"1","D:\\chatApp\\massenger\\src\\App.js":"2","D:\\chatApp\\massenger\\src\\reportWebVitals.js":"3","D:\\chatApp\\massenger\\src\\Message.js":"4","D:\\chatApp\\massenger\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2320,"mtime":1612594632016,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":923,"mtime":1612593499081,"results":"10","hashOfConfig":"7"},{"size":509,"mtime":1612467029498,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"it1m10",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\chatApp\\massenger\\src\\index.js",[],["24","25"],"D:\\chatApp\\massenger\\src\\App.js",["26","27","28"],"import React, { useEffect, useState } from \"react\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\"\nimport FlipMove from 'react-flip-move';\n\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nimport './App.css';\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const [username, setUsername] = useState(\"\");\n\n\n  useEffect(() => {\n    //run when the app component load\n    db.collection('messages')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => ({ id: doc.id, message: doc.data() })))\n      })\n  }, [])\n\n\n  useEffect(() => {\n    setUsername(prompt('Enter ur name...'))\n  }, [])\n\n\n\n  //code\n  //if its black--inside tthe  dependancy--then itt run once vivveversa\n\n  //condition/named/which one u want to change\n\n\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput(\"\");\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <img width=\"70px\"height=\"70px\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Facebook_Messenger_logo_2018.svg/512px-Facebook_Messenger_logo_2018.svg.png\"></img>\n      <h1>shubh-Z ðŸ”¥</h1>\n      <h2>{username}</h2>\n      <form className=\"app_form\">\n        <FormControl className=\"app_formcontrol\">\n          <Input className=\"app_input\" placeholder=\"Enter a message...\" value={input} onChange={event => setInput(event.target.value)} />\n\n\n          <IconButton className=\"app_iconbutton\" disabled={!input} variant=\"contained\" color=\"primary\"\n            type=\"submit\" onClick={sendMessage}><SendIcon/></IconButton>\n        </FormControl>\n\n      </form>\n\n\n\n      <FlipMove>\n        {\n          messages.map(({ id, message }) => (\n            <Message\n              key={id}\n              username={username}\n              message={message} />\n\n          ))\n        }\n\n      </FlipMove>\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n    // setMessages([...messages, {username: username,message:input}])\n","D:\\chatApp\\massenger\\src\\reportWebVitals.js",[],"D:\\chatApp\\massenger\\src\\Message.js",[],"D:\\chatApp\\massenger\\src\\firebase.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":7,"column":10,"nodeType":"35","messageId":"36","endLine":7,"endColumn":16},{"ruleId":"33","severity":1,"message":"37","line":7,"column":31,"nodeType":"35","messageId":"36","endLine":7,"endColumn":41},{"ruleId":"38","severity":1,"message":"39","line":60,"column":7,"nodeType":"40","endLine":60,"endColumn":178},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]