{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","width","height","src","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA2BeA,EAvBCC,sBAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QACpBC,EADiD,EAApBC,WACPF,EAAQE,SACpC,OACI,mCACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,gBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,mBAAqB,oBAA/C,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHd,WAKMR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,MALL,IAK4DF,EAAQA,sB,QCA3EU,EAHIC,IAASC,cAVP,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKKC,Y,uDCkFTC,MArFf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGmBF,mBAAS,IAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAKmBJ,mBAAS,IAL5B,mBAKNpB,EALM,KAKIyB,EALJ,KA6Cb,OArCAC,qBAAU,WAERlB,EAAGmB,WAAW,YACXC,QAAQ,YAAa,QACrBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAAEC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAEpE,IAGHT,qBAAU,WACRD,EAAYW,OAAO,uBAClB,IA0BD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,MAAM,OAAMC,OAAO,OAAOC,IAAI,0IACnC,sDACA,6BAAKvC,IACL,sBAAMC,UAAU,WAAhB,SACE,eAACuC,EAAA,EAAD,CAAavC,UAAU,kBAAvB,UACE,cAACwC,EAAA,EAAD,CAAOxC,UAAU,YAAYyC,YAAY,qBAAqBC,MAAOtB,EAAOuB,SAAU,SAAAC,GAAK,OAAIvB,EAASuB,EAAMC,OAAOH,UAGrH,cAACI,EAAA,EAAD,CAAY9C,UAAU,iBAAiB+C,UAAW3B,EAAOf,QAAQ,YAAYD,MAAM,UACjF4C,KAAK,SAASC,QAzBJ,SAACL,GACnBA,EAAMM,iBAEN3C,EAAGmB,WAAW,YAAYyB,IAAI,CAC5BtD,QAASuB,EACTrB,SAAUA,EACVqD,UAAW5C,IAASS,UAAUoC,WAAWC,oBAE3CjC,EAAS,KAgBH,SACsC,cAAC,IAAD,WAO1C,cAAC,IAAD,UAEIC,EAASS,KAAI,gBAAGE,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,QAAP,OACX,cAAC,EAAD,CAEEE,SAAUA,EACVF,QAASA,GAFJoC,YCnEJsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1989b1c6.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport \"./Message.css\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\"\r\n\r\nconst Message = forwardRef(({ message, username }, ref) => {\r\n    const isUser = username === message.username;\r\n    return (\r\n        <>\r\n            <div ref={ref} className={`message ${isUser && 'message_user'}`}>\r\n                <Card className={isUser ? \"message_userCard\" : \"message_guestCard\"}>\r\n                    <CardContent>\r\n                        <Typography\r\n                            color=\"white\"\r\n                            variant=\"h5\"\r\n                            component=\"h2\">\r\n\r\n                            {!isUser && `${message.username || 'unknown user'}: `} {message.message}\r\n\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\nexport default Message;\r\n","import firebase from \"firebase\"\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDueujXcVK9QYDBOPPRmUARhDGWIHftUbA\",\r\n    authDomain: \"massenger-z.firebaseapp.com\",\r\n    projectId: \"massenger-z\",\r\n    storageBucket: \"massenger-z.appspot.com\",\r\n    messagingSenderId: \"595494259355\",\r\n    appId: \"1:595494259355:web:feed732a9bf881340d543e\",\r\n    measurementId: \"G-R4RPWXP37N\"\r\n  };\r\n\r\n  const firebaseapp =firebase.initializeApp(firebaseConfig);\r\n\r\n  const db= firebaseapp.firestore();\r\n  export default db;\r\n","import React, { useEffect, useState } from \"react\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\"\nimport FlipMove from 'react-flip-move';\n\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nimport './App.css';\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const [username, setUsername] = useState(\"\");\n\n\n  useEffect(() => {\n    //run when the app component load\n    db.collection('messages')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => ({ id: doc.id, message: doc.data() })))\n      })\n  }, [])\n\n\n  useEffect(() => {\n    setUsername(prompt('Enter ur name...'))\n  }, [])\n\n\n\n  //code\n  //if its black--inside tthe  dependancy--then itt run once vivveversa\n\n  //condition/named/which one u want to change\n\n\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput(\"\");\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <img width=\"70px\"height=\"70px\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Facebook_Messenger_logo_2018.svg/512px-Facebook_Messenger_logo_2018.svg.png\"></img>\n      <h1>shubh-Z ðŸ”¥</h1>\n      <h2>{username}</h2>\n      <form className=\"app_form\">\n        <FormControl className=\"app_formcontrol\">\n          <Input className=\"app_input\" placeholder=\"Enter a message...\" value={input} onChange={event => setInput(event.target.value)} />\n\n\n          <IconButton className=\"app_iconbutton\" disabled={!input} variant=\"contained\" color=\"primary\"\n            type=\"submit\" onClick={sendMessage}><SendIcon/></IconButton>\n        </FormControl>\n\n      </form>\n\n\n\n      <FlipMove>\n        {\n          messages.map(({ id, message }) => (\n            <Message\n              key={id}\n              username={username}\n              message={message} />\n\n          ))\n        }\n\n      </FlipMove>\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n    // setMessages([...messages, {username: username,message:input}])\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}